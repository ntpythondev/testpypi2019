
FIELD_ID:
Unique identifier and serial no. for each row in the csv

ENTITY_NAME:
Node name (e.g. object/list) from Json file

ATTRIBUTE_NAME:
Key names from Json file

NODE_LEVEL:
Level of the node in json file. First level is denoted as '1'

TABLE_NAME:
Database table name where the entity will be stored. This can be filled up either by table synonyms (e.g. T_EMPLOYEE) or by prefixing schema name (e.g. FINANCE.EMPLOYEE). Typically one json ENTITY_NAME corresponds to one database TABLE_NAME. This field should filled up as 'DUMMY' if you don't want to load the table into database.

COLUMN_NAME:
Database table name where the attribute value will be stored. This basically represents the granularity of the entire metadata.

PARENT_NODE:
Immidiate parent node of any entity from Json file. It is denoted as parent ENTITY_NAME|FIELD_ID of that parent.

NODE_PATH:
This field is filled up only for the Level 1 node. This should have the same name as the Level 1 node from json file. Anything outside this node will not be processed to database.

ROOT_FLAG:
For any entity, any one attribute will be filled up as 1, other attributes for that entity will be 0.

CURRENT_IND:
This field must be filled up as 'Y' for loading any column in database. In case, you don't want to load any particular column of a table, fill it up as 'N'

LOGICAL_DATATYPE:
Datatype of the database column where you want to store json attribute value.

PARENT_COLUMN:
If you want to load a partcular column of a node (typically the field is not present in json, but you want to load additional column in that table), you can store that value with an attribute from its immidiate parent node. You need to specify that particular ATTRIBUTE_NAME from the immidiate parent node. Please note, that attribute must be present in json file and must belong to the immidiate parent node of the current entity.


